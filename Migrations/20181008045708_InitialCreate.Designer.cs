// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SMarketAPI.Models;

namespace SMarketAPI.Migrations
{
    [DbContext(typeof(SMarketContext))]
    [Migration("20181008045708_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SMarketAPI.Models.Image", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProductId");

                    b.Property<string>("Url");

                    b.HasKey("ImageId");

                    b.HasIndex("ProductId");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("SMarketAPI.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("BuyPrice");

                    b.Property<string>("Description");

                    b.Property<DateTime>("ExpirationDate");

                    b.Property<string>("Image");

                    b.Property<string>("Name");

                    b.Property<int>("ProductTypeId");

                    b.Property<string>("Provider");

                    b.Property<decimal>("SellPrice");

                    b.Property<int>("UnitTypeId");

                    b.HasKey("ProductId");

                    b.HasIndex("ProductTypeId");

                    b.HasIndex("UnitTypeId");

                    b.ToTable("Products");

                    b.HasData(
                        new { ProductId = 1, BuyPrice = 678.57m, Description = "Cencerril Descifre Incorporal Incorruptibilidad Incorporación Abacalero.", ExpirationDate = new DateTime(2019, 2, 27, 22, 16, 44, 464, DateTimeKind.Local), Image = "https://s3.amazonaws.com/uifaces/faces/twitter/sprayaga/128.jpg", Name = "Ergonómico Hormigón Pollo", ProductTypeId = 9, SellPrice = 469.43m, UnitTypeId = 3 },
                        new { ProductId = 2, BuyPrice = 629.49m, Description = "Descerebrar Cendrado Bate Abajo Descercar Batallola General Incorporar.", ExpirationDate = new DateTime(2018, 11, 15, 2, 29, 36, 979, DateTimeKind.Local), Image = "https://s3.amazonaws.com/uifaces/faces/twitter/rpatey/128.jpg", Name = "Elegante Soft Bike", ProductTypeId = 5, SellPrice = 680.46m, UnitTypeId = 2 },
                        new { ProductId = 3, BuyPrice = 669.27m, Description = "Engaritar Cendrazo Incorruptible Engarro Bateaguas Engastar Cendra Fidedigno Incorporar Cencerra.", ExpirationDate = new DateTime(2018, 12, 14, 11, 27, 29, 876, DateTimeKind.Local), Image = "https://s3.amazonaws.com/uifaces/faces/twitter/victor_haydin/128.jpg", Name = "Artesanal Frozen Pantalones", ProductTypeId = 2, SellPrice = 357.16m, UnitTypeId = 1 },
                        new { ProductId = 4, BuyPrice = 786.79m, Description = "Engaritar Generalato Descerrar Cendrar Batatazo Batata Engastadura Descepar.", ExpirationDate = new DateTime(2019, 8, 23, 19, 45, 41, 108, DateTimeKind.Local), Image = "https://s3.amazonaws.com/uifaces/faces/twitter/jesseddy/128.jpg", Name = "Inteligente Cotton Pizza", ProductTypeId = 5, SellPrice = 561.08m, UnitTypeId = 3 },
                        new { ProductId = 5, BuyPrice = 332.91m, Description = "Ficha Cenceñada Fideísmo Descerrumarse Descentralizador Generación Abacero Engarbarse Bataola.", ExpirationDate = new DateTime(2019, 2, 5, 10, 29, 26, 64, DateTimeKind.Local), Image = "https://s3.amazonaws.com/uifaces/faces/twitter/logorado/128.jpg", Name = "Rústico Frozen Zapatos", ProductTypeId = 1, SellPrice = 644.10m, UnitTypeId = 2 }
                    );
                });

            modelBuilder.Entity("SMarketAPI.Models.ProductType", b =>
                {
                    b.Property<int>("ProductTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("ProductTypeId");

                    b.ToTable("ProductType");

                    b.HasData(
                        new { ProductTypeId = 1, Description = "Caucho", Name = "Práctica" },
                        new { ProductTypeId = 2, Description = "Acero", Name = "Pequeño" },
                        new { ProductTypeId = 3, Description = "Madera", Name = "Increíble" },
                        new { ProductTypeId = 4, Description = "Hormigón", Name = "Increíble" },
                        new { ProductTypeId = 5, Description = "Caucho", Name = "Gorgeous" },
                        new { ProductTypeId = 6, Description = "Plástico", Name = "Hecho a mano" },
                        new { ProductTypeId = 7, Description = "Soft", Name = "Fantástico" },
                        new { ProductTypeId = 8, Description = "Madera", Name = "Rústico" },
                        new { ProductTypeId = 9, Description = "Cotton", Name = "Gorgeous" },
                        new { ProductTypeId = 10, Description = "Plástico", Name = "Sabrosa" }
                    );
                });

            modelBuilder.Entity("SMarketAPI.Models.UnitType", b =>
                {
                    b.Property<int>("UnitTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Symbol");

                    b.HasKey("UnitTypeId");

                    b.ToTable("UnitType");

                    b.HasData(
                        new { UnitTypeId = 1, Description = "kilos" },
                        new { UnitTypeId = 2, Description = "gramos" },
                        new { UnitTypeId = 3, Description = "litros" },
                        new { UnitTypeId = 4, Description = "mililitros" }
                    );
                });

            modelBuilder.Entity("SMarketAPI.Models.Image", b =>
                {
                    b.HasOne("SMarketAPI.Models.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SMarketAPI.Models.Product", b =>
                {
                    b.HasOne("SMarketAPI.Models.ProductType", "ProductType")
                        .WithMany()
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SMarketAPI.Models.UnitType", "UnitType")
                        .WithMany()
                        .HasForeignKey("UnitTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
